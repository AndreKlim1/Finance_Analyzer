// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UsersService.Repositories;

#nullable disable

namespace UsersService.Migrations
{
    [DbContext(typeof(UsersServiceDbContext))]
    [Migration("20250325160746_FixPasswordSize")]
    partial class FixPasswordSize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("users")
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UsersService.Models.Profile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.HasKey("Id");

                    b.ToTable("Profiles", "users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 2L,
                            FirstName = "Jane",
                            LastName = "Doe"
                        });
                });

            modelBuilder.Entity("UsersService.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character(256)")
                        .IsFixedLength();

                    b.Property<long>("ProfileId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("ProfileId")
                        .IsUnique();

                    b.ToTable("Users", "users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Email = "user1@example.com",
                            PasswordHash = "h",
                            ProfileId = 1L,
                            RegistrationDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Role = 0
                        },
                        new
                        {
                            Id = 2L,
                            Email = "user2@example.com",
                            PasswordHash = "h",
                            ProfileId = 2L,
                            RegistrationDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Role = 1
                        });
                });

            modelBuilder.Entity("UsersService.Models.User", b =>
                {
                    b.HasOne("UsersService.Models.Profile", "Profile")
                        .WithOne()
                        .HasForeignKey("UsersService.Models.User", "ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });
#pragma warning restore 612, 618
        }
    }
}
