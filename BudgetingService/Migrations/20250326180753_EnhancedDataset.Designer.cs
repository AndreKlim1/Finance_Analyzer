// <auto-generated />
using System;
using BudgetingService.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BudgetingService.Migrations
{
    [DbContext(typeof(BudgetingServiceDbContext))]
    [Migration("20250326180753_EnhancedDataset")]
    partial class EnhancedDataset
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("budgets")
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BudgetingService.Models.Budget", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("BudgetName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<int>("BudgetStatus")
                        .HasColumnType("integer");

                    b.Property<int>("BudgetType")
                        .HasColumnType("integer");

                    b.Property<long?>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<int>("CurrValue")
                        .HasColumnType("integer");

                    b.Property<int>("Currency")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<DateTime>("PeriodEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("PeriodStart")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PlannedAmount")
                        .HasColumnType("integer");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("WarningShowed")
                        .HasColumnType("boolean");

                    b.Property<int>("WarningThreshold")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Budgets", "budgets");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AccountId = 1L,
                            BudgetName = "Monthly Groceries",
                            BudgetStatus = 0,
                            BudgetType = 1,
                            CategoryId = 4L,
                            Color = "#3f3dbf",
                            CurrValue = 100,
                            Currency = 1,
                            Description = "Budget for monthly grocery shopping",
                            PeriodEnd = new DateTime(2025, 3, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            PeriodStart = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PlannedAmount = 500,
                            UserId = 1L,
                            WarningShowed = false,
                            WarningThreshold = 80
                        },
                        new
                        {
                            Id = 2L,
                            AccountId = 2L,
                            BudgetName = "Vacation Savings",
                            BudgetStatus = 0,
                            BudgetType = 0,
                            CategoryId = 5L,
                            Color = "#34bbb7",
                            CurrValue = 200,
                            Currency = 0,
                            Description = "Saving up for a summer vacation",
                            PeriodEnd = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            PeriodStart = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PlannedAmount = 2000,
                            UserId = 2L,
                            WarningShowed = false,
                            WarningThreshold = 90
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
